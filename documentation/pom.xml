<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Hibernate Validator, declare and validate application constraints
  ~
  ~ License: Apache License, Version 2.0
  ~ See the license.txt file in the root directory or <http://www.apache.org/licenses/LICENSE-2.0>.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.hibernate.validator</groupId>
        <artifactId>hibernate-validator-parent</artifactId>
        <version>6.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>hibernate-validator-documentation</artifactId>
    <packaging>jar</packaging>

    <name>Hibernate Validator Manual</name>
    <description>The Hibernate Validator reference manual</description>

    <properties>
        <asciidoctor.base-outputdir>${basedir}/target/asciidoctor</asciidoctor.base-outputdir>
        <asciidoctor.images-dir>${basedir}/src/main/resources/images</asciidoctor.images-dir>
        <asciidoctor.examples-sourcedir>${basedir}/src/test/java</asciidoctor.examples-sourcedir>
        <asciidoctor.engine-source-dir>${basedir}/../engine/src/main/java</asciidoctor.engine-source-dir>

        <!-- Skip artifact deployment -->
        <maven.deploy.skip>true</maven.deploy.skip>
        <maven-surefire-plugin.argLine>-Duser.language=en</maven-surefire-plugin.argLine>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.el</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-validator-cdi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Only use assertj when stricly necessary in the documentation tests -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <configLocation>checkstyle-documentation.xml</configLocation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>output-html</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>html5</backend>
                            <sourceDocumentName>index.asciidoc</sourceDocumentName>
                            <outputDirectory>${asciidoctor.base-outputdir}/html_single</outputDirectory>
                            <!--
                            Asciidoctor Maven plugin 1.6 introduces a resources management which will allow to copy
                            only the necessary resources. For now, we put the resources in an external directory and use
                            the maven-resources-plugin to copy them.
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <include>css/**</include>
                                        <include>images/**</include>
                                    </includes>
                                </resource>
                            </resources>
                            -->
                            <sourceHighlighter>prettify</sourceHighlighter>
                            <attributes>
                                <sourcedir>${asciidoctor.examples-sourcedir}</sourcedir>
                                <engine-sourcedir>${asciidoctor.engine-source-dir}</engine-sourcedir>
                                <icons>font</icons>
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- This won't be necessary with version 1.6 of the asciidoctor Maven plugin as it's possible to define the resources copied.
                It will also be possible to put back the images, css and docinfo files into the asciidoc directory. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-asciidoc-images</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${asciidoctor.base-outputdir}/html_single/images/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/resources/images/</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-asciidoc-css</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${asciidoctor.base-outputdir}/html_single/css/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/resources/css/</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>documentation-pdf</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctor-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>output-pdf</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>process-asciidoc</goal>
                                </goals>
                                <configuration>
                                    <backend>pdf</backend>
                                    <sourceDocumentName>index.asciidoc</sourceDocumentName>
                                    <imagesDir>${asciidoctor.images-dir}</imagesDir>
                                    <outputDirectory>${asciidoctor.base-outputdir}/pdf</outputDirectory>
                                    <sourceHighlighter>coderay</sourceHighlighter>
                                    <attributes>
                                        <sourcedir>${asciidoctor.examples-sourcedir}</sourcedir>
                                        <engine-sourcedir>${asciidoctor.engine-source-dir}</engine-sourcedir>
                                        <pdf-stylesdir>${project.basedir}/src/main/resources/theme</pdf-stylesdir>
                                        <pdf-style>hibernate</pdf-style>
                                        <pdf-fontsdir>${project.basedir}/src/main/resources/theme/fonts</pdf-fontsdir>
                                        <icons>font</icons>
                                        <pagenums/>
                                        <toc/>
                                        <idprefix/>
                                        <idseparator>-</idseparator>
                                    </attributes>
                                </configuration>
                            </execution>
                            <!-- The epub output is very alpha. Let's forget about it for now.
                            <execution>
                                <id>output-epub</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>process-asciidoc</goal>
                                </goals>
                                <configuration>
                                    <backend>epub3</backend>
                                    <sourceDocumentName>index.asciidoc</sourceDocumentName>
                                    <imagesDir>${asciidoctor.images-dir}</imagesDir>
                                    <outputDirectory>${asciidoctor.base-outputdir}/epub</outputDirectory>
                                    <sourceHighlighter>coderay</sourceHighlighter>
                                    <attributes>
                                        <sourcedir>${asciidoctor.examples-sourcedir}</sourcedir>
                                        <engine-sourcedir>${asciidoctor.engine-source-dir}</engine-sourcedir>
                                        <icons>font</icons>
                                        <pagenums/>
                                        <toc/>
                                        <idprefix/>
                                        <idseparator>-</idseparator>
                                    </attributes>
                                </configuration>
                            </execution>
                            -->
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>ch.mfrey.maven.plugin</groupId>
                        <artifactId>copy-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>${asciidoctor.base-outputdir}/pdf</directory>
                                            <move>true</move>
                                            <includes>
                                                <include>index.pdf</include>
                                            </includes>
                                            <paths>
                                                <path>
                                                    <from>index.pdf</from>
                                                    <to>hibernate_validator_reference.pdf</to>
                                                </path>
                                            </paths>
                                        </resource>
                                        <!-- The epub output is very alpha. Let's forget about it for now.
                                        <resource>
                                            <directory>${asciidoctor.base-outputdir}/epub</directory>
                                            <move>true</move>
                                            <includes>
                                                <include>index.epub</include>
                                            </includes>
                                            <paths>
                                                <path>
                                                    <from>index.epub</from>
                                                    <to>hibernate_validator_reference.epub</to>
                                                </path>
                                            </paths>
                                        </resource>
                                        -->
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
